/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package eksetasi;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import java.io.FileNotFoundException;
import javax.swing.JFileChooser;
import java.io.BufferedOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;
/**
 *
 * @author user
 */
public class GeneralPayrollForm extends javax.swing.JFrame {

    /**
     * Creates new form GeneralPayrollForm
     */
    public GeneralPayrollForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        yearChooser = new com.toedter.calendar.JYearChooser();
        monthChooser = new com.toedter.calendar.JMonthChooser();
        select_button = new javax.swing.JButton();
        print_button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        Select = new javax.swing.JMenu();
        Select_employees = new javax.swing.JMenuItem();
        Select_phones = new javax.swing.JMenuItem();
        Select_employeeStatus = new javax.swing.JMenuItem();
        Select_salaryHistory = new javax.swing.JMenuItem();
        Select_leaveDays = new javax.swing.JMenuItem();
        Select_sickDays = new javax.swing.JMenuItem();
        Select_unpaidAbsences = new javax.swing.JMenuItem();
        Select_workHours = new javax.swing.JMenuItem();
        Select_authorizedUsers = new javax.swing.JMenuItem();
        Insert = new javax.swing.JMenu();
        Insert_employee = new javax.swing.JMenuItem();
        Insert_employeePhones = new javax.swing.JMenuItem();
        Insert_employeeStatus = new javax.swing.JMenuItem();
        Insert_salaryHistory = new javax.swing.JMenuItem();
        Insert_leaveDays = new javax.swing.JMenuItem();
        Insert_sickDays = new javax.swing.JMenuItem();
        Insert_unpaidAbsences = new javax.swing.JMenuItem();
        Insert_workHours = new javax.swing.JMenuItem();
        Insert_authorizedUsers = new javax.swing.JMenuItem();
        Salaries = new javax.swing.JMenu();
        Payment = new javax.swing.JMenuItem();
        Salary_receipt = new javax.swing.JMenuItem();
        General_payroll = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("General Payroll");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Year");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Month");

        select_button.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        select_button.setText("Select");
        select_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_buttonActionPerformed(evt);
            }
        });

        print_button.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        print_button.setText("Print General Payroll");
        print_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                print_buttonActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(table);

        Select.setText("Select");

        Select_employees.setText("Employees");
        Select_employees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Select_employeesActionPerformed(evt);
            }
        });
        Select.add(Select_employees);

        Select_phones.setText("Phones");
        Select_phones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Select_phonesActionPerformed(evt);
            }
        });
        Select.add(Select_phones);

        Select_employeeStatus.setText("Status");
        Select_employeeStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Select_employeeStatusActionPerformed(evt);
            }
        });
        Select.add(Select_employeeStatus);

        Select_salaryHistory.setText("Salary History");
        Select_salaryHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Select_salaryHistoryActionPerformed(evt);
            }
        });
        Select.add(Select_salaryHistory);

        Select_leaveDays.setText("Leave Days");
        Select_leaveDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Select_leaveDaysActionPerformed(evt);
            }
        });
        Select.add(Select_leaveDays);

        Select_sickDays.setText("Sick Days");
        Select_sickDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Select_sickDaysActionPerformed(evt);
            }
        });
        Select.add(Select_sickDays);

        Select_unpaidAbsences.setText("Absence Days");
        Select_unpaidAbsences.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Select_unpaidAbsencesActionPerformed(evt);
            }
        });
        Select.add(Select_unpaidAbsences);

        Select_workHours.setText("Hours Worked");
        Select_workHours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Select_workHoursActionPerformed(evt);
            }
        });
        Select.add(Select_workHours);

        Select_authorizedUsers.setText("Authorization");
        Select_authorizedUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Select_authorizedUsersActionPerformed(evt);
            }
        });
        Select.add(Select_authorizedUsers);

        jMenuBar1.add(Select);

        Insert.setText("Insert");

        Insert_employee.setText("Employee");
        Insert_employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Insert_employeeActionPerformed(evt);
            }
        });
        Insert.add(Insert_employee);

        Insert_employeePhones.setText("Phones");
        Insert_employeePhones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Insert_employeePhonesActionPerformed(evt);
            }
        });
        Insert.add(Insert_employeePhones);

        Insert_employeeStatus.setText("Status");
        Insert_employeeStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Insert_employeeStatusActionPerformed(evt);
            }
        });
        Insert.add(Insert_employeeStatus);

        Insert_salaryHistory.setText("Salary History");
        Insert_salaryHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Insert_salaryHistoryActionPerformed(evt);
            }
        });
        Insert.add(Insert_salaryHistory);

        Insert_leaveDays.setText("Leave Days");
        Insert_leaveDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Insert_leaveDaysActionPerformed(evt);
            }
        });
        Insert.add(Insert_leaveDays);

        Insert_sickDays.setText("Sick Days");
        Insert_sickDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Insert_sickDaysActionPerformed(evt);
            }
        });
        Insert.add(Insert_sickDays);

        Insert_unpaidAbsences.setText("Absence Days");
        Insert_unpaidAbsences.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Insert_unpaidAbsencesActionPerformed(evt);
            }
        });
        Insert.add(Insert_unpaidAbsences);

        Insert_workHours.setText("Hours Worked");
        Insert_workHours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Insert_workHoursActionPerformed(evt);
            }
        });
        Insert.add(Insert_workHours);

        Insert_authorizedUsers.setText("Authorization");
        Insert_authorizedUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Insert_authorizedUsersActionPerformed(evt);
            }
        });
        Insert.add(Insert_authorizedUsers);

        jMenuBar1.add(Insert);

        Salaries.setText("Salaries");

        Payment.setText("Payment");
        Payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaymentActionPerformed(evt);
            }
        });
        Salaries.add(Payment);

        Salary_receipt.setText("Salary Receipt");
        Salary_receipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Salary_receiptActionPerformed(evt);
            }
        });
        Salaries.add(Salary_receipt);

        General_payroll.setText("General Payroll");
        Salaries.add(General_payroll);

        jMenuBar1.add(Salaries);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(151, 151, 151)
                                .addComponent(jLabel3))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(yearChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91)
                        .addComponent(monthChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(select_button)
                        .addGap(60, 60, 60)
                        .addComponent(print_button)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(yearChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(select_button)
                    .addComponent(print_button))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Select_employeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Select_employeesActionPerformed
        // TODO add your handling code here:
        Select_employeeForm f = new Select_employeeForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Select_employeesActionPerformed

    private void Select_phonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Select_phonesActionPerformed
        // TODO add your handling code here:
        Select_employeePhonesForm f = new Select_employeePhonesForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Select_phonesActionPerformed

    private void Select_employeeStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Select_employeeStatusActionPerformed
        // TODO add your handling code here:
        Select_employeeStatusForm f = new Select_employeeStatusForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Select_employeeStatusActionPerformed

    private void Select_salaryHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Select_salaryHistoryActionPerformed
        // TODO add your handling code here:
        Select_salaryHistoryForm f = new Select_salaryHistoryForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Select_salaryHistoryActionPerformed

    private void Select_leaveDaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Select_leaveDaysActionPerformed
        // TODO add your handling code here:
        Select_leaveDaysForm f = new Select_leaveDaysForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Select_leaveDaysActionPerformed

    private void Select_sickDaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Select_sickDaysActionPerformed
        // TODO add your handling code here:
        Select_sickDaysForm f = new Select_sickDaysForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Select_sickDaysActionPerformed

    private void Select_unpaidAbsencesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Select_unpaidAbsencesActionPerformed
        // TODO add your handling code here:
        Select_unpaidAbsencesForm f = new Select_unpaidAbsencesForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Select_unpaidAbsencesActionPerformed

    private void Select_workHoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Select_workHoursActionPerformed
        // TODO add your handling code here:
        Select_workHoursForm f = new Select_workHoursForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Select_workHoursActionPerformed

    private void Select_authorizedUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Select_authorizedUsersActionPerformed
        // TODO add your handling code here:
        Select_authorizationForm f = new Select_authorizationForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Select_authorizedUsersActionPerformed

    private void Insert_employeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Insert_employeeActionPerformed
        // TODO add your handling code here:
        Insert_employeeForm f = new Insert_employeeForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Insert_employeeActionPerformed

    private void Insert_employeePhonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Insert_employeePhonesActionPerformed
        // TODO add your handling code here:
        Insert_employeePhonesForm f = new Insert_employeePhonesForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Insert_employeePhonesActionPerformed

    private void Insert_employeeStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Insert_employeeStatusActionPerformed
        // TODO add your handling code here:
        Insert_employeeStatusForm f = new Insert_employeeStatusForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Insert_employeeStatusActionPerformed

    private void Insert_salaryHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Insert_salaryHistoryActionPerformed
        // TODO add your handling code here:
        Insert_salaryHistoryForm f = new Insert_salaryHistoryForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Insert_salaryHistoryActionPerformed

    private void Insert_leaveDaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Insert_leaveDaysActionPerformed
        // TODO add your handling code here:
        Insert_leaveDaysForm f = new Insert_leaveDaysForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Insert_leaveDaysActionPerformed

    private void Insert_sickDaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Insert_sickDaysActionPerformed
        // TODO add your handling code here:
        Insert_sickDaysForm f = new Insert_sickDaysForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Insert_sickDaysActionPerformed

    private void Insert_unpaidAbsencesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Insert_unpaidAbsencesActionPerformed
        // TODO add your handling code here:
        Insert_unpaidAbsencesForm f = new Insert_unpaidAbsencesForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Insert_unpaidAbsencesActionPerformed

    private void Insert_workHoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Insert_workHoursActionPerformed
        // TODO add your handling code here:
        Insert_workHoursForm f = new Insert_workHoursForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Insert_workHoursActionPerformed

    private void Insert_authorizedUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Insert_authorizedUsersActionPerformed
        // TODO add your handling code here:
        Insert_authorizationForm f = new Insert_authorizationForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Insert_authorizedUsersActionPerformed

    private void PaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaymentActionPerformed
        // TODO add your handling code here:
        PaymentForm f = new PaymentForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_PaymentActionPerformed

    private void Salary_receiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Salary_receiptActionPerformed
        // TODO add your handling code here:
        SalaryReceiptForm f = new SalaryReceiptForm();
        f.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_Salary_receiptActionPerformed

    private void select_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_buttonActionPerformed
        // TODO add your handling code here:
        Connection conn = null;
        int year = yearChooser.getYear();
        int month = monthChooser.getMonth() + 1;
        try{
            conn = DriverManager.getConnection(LoginForm.CONN_STRING, LoginForm.USERNAME, LoginForm.PASSWORD);
            String sql = """
                         SELECT employees.EmployeeID, FirstName, Lastname, AFM, Address, AMKA, Year, Month, Salary, LeaveDays, SickDays, AbsenceDays FROM employees
                         JOIN salary
                         ON employees.EmployeeID = salary.EmployeeID WHERE Year = ? AND Month = ?""";
            try(PreparedStatement pstmt = conn.prepareStatement(sql)){
                pstmt.setInt(1, year);
                pstmt.setInt(2, month);
                ResultSet rs = pstmt.executeQuery();
                ResultSetMetaData rsmd = rs.getMetaData();
                int columnCount = rsmd.getColumnCount();
                
                Vector<String> columnNames = new Vector<>();
                for(int i = 1; i <= columnCount; i++){
                    columnNames.add(rsmd.getColumnName(i));
                }
                
                Vector<Vector<Object>> data = new Vector<>();
                while(rs.next()){
                    Vector<Object> row = new Vector<>();
                    for(int i = 1; i <= columnCount; i++){
                        row.add(rs.getObject(i));
                    }
                    data.add(row);
                }
                
                if(data.isEmpty()){
                    DefaultTableModel emptyModel = new DefaultTableModel();
                    table.setModel(emptyModel);
                    JOptionPane.showMessageDialog(null, "Δεν βρέθηκαν αποτελέσματα.");
                }
                else{
                    DefaultTableModel model = new DefaultTableModel(data, columnNames);
                    table.setModel(model);
                }
            }
            conn.close();
        }
        catch(SQLException exce){
            JOptionPane.showMessageDialog(null, exce.getMessage());
        }
    }//GEN-LAST:event_select_buttonActionPerformed

    private void print_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_print_buttonActionPerformed
        // TODO add your handling code here:
        FileOutputStream excelFOUT = null;
        BufferedOutputStream excelBOUT = null;
        XSSFWorkbook workbook = null;
        
        JFileChooser excelFileChooser = new JFileChooser();
        excelFileChooser.setDialogTitle("Save as");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx");
        excelFileChooser.setFileFilter(fnef);
        int excelChooser = excelFileChooser.showSaveDialog(null);
        if(excelChooser == JFileChooser.APPROVE_OPTION){
            try{
                workbook = new XSSFWorkbook();
                XSSFSheet sheet = workbook.createSheet("JTable Sheet");
                XSSFFont headerFont = workbook.createFont();
                headerFont.setBold(true);
                XSSFCellStyle headerStyle = workbook.createCellStyle();
                headerStyle.setFont(headerFont);
                
                XSSFRow headerRow = sheet.createRow(0);
                for(int i = 0; i < table.getColumnCount(); i++){
                    XSSFCell cell = headerRow.createCell(i);
                    cell.setCellValue(table.getColumnName(i));
                    cell.setCellStyle(headerStyle);
                }
                
                for(int i = 0; i < table.getRowCount(); i++){
                    XSSFRow row = sheet.createRow(i + 1);
                    for(int j = 0; j < table.getColumnCount(); j++){
                        XSSFCell cell = row.createCell(j);
                        cell.setCellValue(table.getValueAt(i, j).toString());
                    }
                }
                
                for(int j = 0; j < table.getColumnCount(); j++){
                    sheet.autoSizeColumn(j);
                }
                
                excelFOUT = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                excelBOUT = new BufferedOutputStream(excelFOUT);
                workbook.write(excelBOUT);
                JOptionPane.showMessageDialog(null, "Η εξαγωγή ήταν επιτυχής.");
            }
            catch(FileNotFoundException ex){
                ex.printStackTrace();
            }
            catch(IOException ex){
                ex.printStackTrace();
            }
            
            finally{
                try{
                    if(excelBOUT != null) excelBOUT.close();
                    if(excelFOUT != null) excelFOUT.close();
                    if(workbook != null) workbook.close();
                }
                catch(IOException io){
                    JOptionPane.showMessageDialog(null, io);
                }
            }
        }
    }//GEN-LAST:event_print_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeneralPayrollForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeneralPayrollForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeneralPayrollForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeneralPayrollForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeneralPayrollForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem General_payroll;
    private javax.swing.JMenu Insert;
    private javax.swing.JMenuItem Insert_authorizedUsers;
    private javax.swing.JMenuItem Insert_employee;
    private javax.swing.JMenuItem Insert_employeePhones;
    private javax.swing.JMenuItem Insert_employeeStatus;
    private javax.swing.JMenuItem Insert_leaveDays;
    private javax.swing.JMenuItem Insert_salaryHistory;
    private javax.swing.JMenuItem Insert_sickDays;
    private javax.swing.JMenuItem Insert_unpaidAbsences;
    private javax.swing.JMenuItem Insert_workHours;
    private javax.swing.JMenuItem Payment;
    private javax.swing.JMenu Salaries;
    private javax.swing.JMenuItem Salary_receipt;
    private javax.swing.JMenu Select;
    private javax.swing.JMenuItem Select_authorizedUsers;
    private javax.swing.JMenuItem Select_employeeStatus;
    private javax.swing.JMenuItem Select_employees;
    private javax.swing.JMenuItem Select_leaveDays;
    private javax.swing.JMenuItem Select_phones;
    private javax.swing.JMenuItem Select_salaryHistory;
    private javax.swing.JMenuItem Select_sickDays;
    private javax.swing.JMenuItem Select_unpaidAbsences;
    private javax.swing.JMenuItem Select_workHours;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JMonthChooser monthChooser;
    private javax.swing.JButton print_button;
    private javax.swing.JButton select_button;
    private javax.swing.JTable table;
    private com.toedter.calendar.JYearChooser yearChooser;
    // End of variables declaration//GEN-END:variables
}
